"use client";

import { useEffect, useState, useCallback } from "react";
import { FiSettings } from "react-icons/fi";
import { fetchArticles } from "@/api/api/articles";
import Banner from "@/components/Banner/Banner";
import ContainerDefault from "@/components/Containers/ContainerDefault";
import NewsCard from "@/components/News/NewsCard";
import Pagination from "@/components/Pagination/Pagination";
import SearchBar from "@/components/Search/SearchBar";
import FilterBar from "@/components/Filter/FilterBar";
import ThemeToggle from "@/components/Theme/ThemeToggle";
import ToastContainer from "@/components/Toast/ToastContainer";
import FavoriteButton from "@/components/Favorites/FavoriteButton";
import SettingsModal from "@/components/Settings/SettingsModal";
import VoiceSearch from "@/components/VoiceSearch/VoiceSearch";
import ExportFavorites from "@/components/Export/ExportFavorites";
import { INews, IApiResponse } from "@/types/news.types";
import { APP_CONFIG, UI_MESSAGES, FILTER_OPTIONS } from "@/constants/app.constants";
import { useToast } from "@/hooks/useToast";
import { useSearch } from "@/hooks/useSearch";
import PerformanceMonitor from "@/components/PerformanceMonitor/PerformanceMonitor";
import ErrorMonitor from "@/components/ErrorMonitor/ErrorMonitor";
import AccessibilityChecker from "@/components/AccessibilityChecker/AccessibilityChecker";
import PWAInstallButton from "@/components/PWA/PWAInstallButton";
import PWAManager from "@/components/PWA/PWAManager";
import ServiceWorkerProvider from "@/components/PWA/ServiceWorkerProvider";

export default function Home() {
  const [apiData, setApiData] = useState<IApiResponse | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [currentPage, setCurrentPage] = useState(1);
  const [retryCount, setRetryCount] = useState(0);
  const [activeFilter, setActiveFilter] = useState('all');
  const [isSettingsOpen, setIsSettingsOpen] = useState(false);

  // –•—É–∫–∏ –¥–ª—è UX —É–ª—É—á—à–µ–Ω–∏–π
  const { toasts, success, error: showError, removeToast, info } = useToast();
  const { 
    searchQuery, 
    filteredArticles, 
    isSearching, 
    cacheHit,
    handleSearch, 
    clearSearch,
    resultCount 
  } = useSearch(apiData?.articles || []);

  const loadArticles = useCallback(async (page: number, isRetry: boolean = false) => {
    try {
      setLoading(true);
      setError(null);
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
      if (!Number.isInteger(page) || page < 1) {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
      }
      
      const data = await fetchArticles(page);
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
      if (!data || !Array.isArray(data.articles)) {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
      }
      
      setApiData(data);
      setCurrentPage(page);
      setRetryCount(0); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
      if (data.articles.length > 0) {
        success(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.articles.length} –Ω–æ–≤–æ—Å—Ç–µ–π`);
      } else {
        info('–ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∑–∂–µ');
      }
    } catch (err) {
      let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      
      if (err instanceof Error) {
        errorMessage = err.message;
      } else if (typeof err === 'string') {
        errorMessage = err;
      }
      
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–µ–π:', {
        error: err,
        page,
        retryCount,
        timestamp: new Date().toISOString()
      });
      
      setError(errorMessage);
      showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', errorMessage);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π retry —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
      if (!isRetry && retryCount < APP_CONFIG.RETRY_ATTEMPTS) {
        const isNetworkError = errorMessage.includes('fetch') || 
                              errorMessage.includes('network') || 
                              errorMessage.includes('timeout') ||
                              errorMessage.includes('503') ||
                              errorMessage.includes('502');
        
        if (isNetworkError) {
          setTimeout(() => {
            setRetryCount(prev => prev + 1);
            loadArticles(page, true);
          }, APP_CONFIG.RETRY_DELAY_BASE * (retryCount + 1));
        }
      }
    } finally {
      setLoading(false);
    }
  }, [retryCount, success, showError, info]);

  useEffect(() => {
    loadArticles(1);
  }, [loadArticles]);

  const handlePageChange = (page: number) => {
    loadArticles(page);
  };

  const handleFilterChange = (filterId: string) => {
    setActiveFilter(filterId);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  };

  const handleFavoriteToggle = (news: INews, isFavorite: boolean) => {
    if (isFavorite) {
      success(UI_MESSAGES.ADDED_TO_FAVORITES);
    } else {
      success(UI_MESSAGES.REMOVED_FROM_FAVORITES);
    }
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  const LoadingState = () => (
    <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 lg:gap-8">
      {Array.from({ length: 6 }).map((_, index) => (
        <div key={index} className="card animate-pulse">
          <div className="h-48 md:h-64 bg-gray-700 rounded-t-xl"></div>
          <div className="p-6">
            <div className="h-6 bg-gray-700 rounded mb-3"></div>
            <div className="h-4 bg-gray-700 rounded mb-2"></div>
            <div className="h-4 bg-gray-700 rounded w-3/4"></div>
          </div>
        </div>
      ))}
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–∫–∏
  const ErrorState = () => (
    <div className="text-center py-20">
      <div className="glass-effect rounded-2xl p-12 max-w-md mx-auto">
        <div className="text-red-400 text-6xl mb-6">‚ö†Ô∏è</div>
        <div className="text-red-400 text-xl font-semibold mb-4">{UI_MESSAGES.ERROR_TITLE}</div>
        <p className="text-gray-300 mb-6">{error}</p>
        {retryCount > 0 && retryCount < APP_CONFIG.RETRY_ATTEMPTS && (
          <p className="text-yellow-400 mb-4">
            {UI_MESSAGES.RETRY_ATTEMPT} {retryCount + 1} {UI_MESSAGES.RETRY_OF} {APP_CONFIG.RETRY_ATTEMPTS}...
          </p>
        )}
        <button 
          onClick={() => loadArticles(currentPage)}
          className="btn-primary px-8 py-3"
        >
          {UI_MESSAGES.RETRY_BUTTON}
        </button>
      </div>
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const EmptyState = () => (
    <div className="text-center py-20">
      <div className="glass-effect rounded-2xl p-12 max-w-md mx-auto">
        <div className="text-gray-400 text-6xl mb-6">
          {searchQuery ? 'üîç' : 'üì∞'}
        </div>
        <div className="text-gray-400 text-xl font-semibold mb-4">
          {searchQuery ? UI_MESSAGES.NO_RESULTS : UI_MESSAGES.EMPTY_TITLE}
        </div>
        <p className="text-gray-500 mb-6">
          {searchQuery 
            ? `–ü–æ –∑–∞–ø—Ä–æ—Å—É "${searchQuery}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ` 
            : UI_MESSAGES.EMPTY_DESCRIPTION
          }
        </p>
        {searchQuery && (
          <button 
            onClick={clearSearch}
            className="btn-primary px-8 py-3"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫
          </button>
        )}
      </div>
    </div>
  );

  return (
    <ServiceWorkerProvider>
      <main className="min-h-screen pt-20">
      <Banner 
        title="–ù–æ–≤–æ—Å—Ç–∏ –°–í–û" 
        description="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –°–í–û –∑–∞ 2025 –≥–æ–¥ –æ—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π" 
        variant="hero"
        showStats={true}
      />
      <ContainerDefault>
        {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
        <div className="mb-[40px] max-[425px]:mb-[60px]">
          <div className="flex items-center gap-2 text-white mb-[20px] max-[425px]:hidden">
            <span>–ì–ª–∞–≤–Ω–∞—è</span>
            <span>/</span>
            <span>–ù–æ–≤–æ—Å—Ç–∏</span>
          </div>
        </div>

        {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="mb-12">
          <div className="glass-effect rounded-2xl p-6 mb-8">
            <div className="flex flex-col lg:flex-row gap-6 items-start lg:items-center justify-between">
              {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
              <div className="flex flex-col lg:flex-row gap-4 flex-1">
                <div className="flex-1 max-w-md">
                  <SearchBar 
                    onSearch={handleSearch}
                    placeholder="–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –°–í–û..."
                    showSuggestions={true}
                    showFilters={true}
                  />
                </div>
                <FilterBar
                  filters={FILTER_OPTIONS}
                  activeFilter={activeFilter}
                  onFilterChange={handleFilterChange}
                />
              </div>
              
              {/* –£–ø—Ä–∞–≤–ª—è—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
              <div className="flex items-center gap-3">
                <VoiceSearch onSearch={handleSearch} />
                <ThemeToggle />
                <button
                  onClick={() => setIsSettingsOpen(true)}
                  className="p-3 glass-effect rounded-xl text-gray-300 hover:text-white hover:bg-white/20 transition-all duration-200"
                  title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
                >
                  <FiSettings className="h-5 w-5" />
                </button>
              </div>
            </div>

            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–∏—Å–∫–∞ */}
            {isSearching && (
              <div className="flex items-center gap-3 text-blue-400 text-sm mt-4 animate-pulse">
                <div className="animate-spin rounded-full h-4 w-4 border-2 border-blue-400 border-t-transparent"></div>
                –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π...
              </div>
            )}

            {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
            {searchQuery && !isSearching && (
              <div className="flex items-center justify-between mt-4 p-4 bg-white/5 rounded-xl">
                <div className="text-sm text-gray-300">
                  –ù–∞–π–¥–µ–Ω–æ: <span className="font-semibold text-white">{resultCount}</span> {resultCount === 1 ? '–Ω–æ–≤–æ—Å—Ç—å' : '–Ω–æ–≤–æ—Å—Ç–µ–π'}
                  {cacheHit && <span className="ml-2 text-green-400 text-xs">(–∏–∑ –∫—ç—à–∞)</span>}
                </div>
                <ExportFavorites />
              </div>
            )}
          </div>
        </div>

        {loading && <LoadingState />}
        
        {error && !loading && <ErrorState />}
        
        {!loading && !error && apiData && (
          <>
            {(searchQuery ? filteredArticles : apiData.articles).length === 0 ? (
              <EmptyState />
            ) : (
              <>
                <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 lg:gap-8 mb-16">
                  {(searchQuery ? filteredArticles : apiData.articles).map((news: INews, index: number) => (
                    <div 
                      key={news.id} 
                      className="relative group animate-fade-in"
                      style={{ animationDelay: `${index * 0.1}s` }}
                    >
                      <NewsCard 
                        news={news} 
                        variant={index === 0 ? 'featured' : 'default'}
                        showStats={true}
                      />
                      {/* –ö–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
                      <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                        <FavoriteButton 
                          news={news}
                          onToggle={handleFavoriteToggle}
                        />
                      </div>
                    </div>
                  ))}
                </div>

                {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –ø–æ–∏—Å–∫ */}
                {!searchQuery && apiData.totalPages && apiData.totalPages > 1 && (
                  <Pagination
                    currentPage={currentPage}
                    totalPages={apiData.totalPages}
                    onPageChange={handlePageChange}
                  />
                )}
              </>
            )}
          </>
        )}
      </ContainerDefault>
      
      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
      <ToastContainer toasts={toasts} onRemove={removeToast} />
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
      <SettingsModal 
        isOpen={isSettingsOpen} 
        onClose={() => setIsSettingsOpen(false)} 
      />
      
      {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –≤ development —Ä–µ–∂–∏–º–µ) */}
      {process.env.NODE_ENV === 'development' && (
        <>
          <PerformanceMonitor />
          <ErrorMonitor />
          <AccessibilityChecker />
          <PWAManager className="fixed bottom-4 left-4 z-40 max-w-sm" />
        </>
      )}
      
      {/* PWA –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã */}
      <PWAInstallButton />
    </main>
    </ServiceWorkerProvider>
  );
}
