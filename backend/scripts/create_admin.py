#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""

import os
import sys
from sqlalchemy.orm import Session
from app.core.database import SessionLocal
from app.models import User
from passlib.context import CryptContext

# Password hashing
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def get_password_hash(password: str) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ö–µ—à –ø–∞—Ä–æ–ª—è"""
    return pwd_context.hash(password)

def create_admin():
    """–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    db: Session = SessionLocal()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        admin = db.query(User).filter(User.username == "admin").first()
        if admin:
            print("‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return True
        
        # –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin = User(
            email="admin@mlcommunity.com",
            username="admin",
            hashed_password=get_password_hash("admin123"),
            ign="MLAdmin",
            current_rank="Mythic",
            role="Admin",
            is_active=True,
            is_verified=True
        )
        
        db.add(admin)
        db.commit()
        
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üìß Email: admin@mlcommunity.com")
        print("üë§ Username: admin")
        print("üîë Password: admin123")
        print("‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        db.rollback()
        return False
    finally:
        db.close()

if __name__ == "__main__":
    print("üëë –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("=" * 30)
    
    create_admin()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")