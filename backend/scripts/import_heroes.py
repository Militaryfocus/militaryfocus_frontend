#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤ Mobile Legends
"""

import json
import sys
import os
from sqlalchemy.orm import Session
from app.core.database import SessionLocal
from app.models import Hero

def import_heroes_data():
    """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    db: Session = SessionLocal()
    
    try:
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏ –≥–µ—Ä–æ–µ–≤
        heroes_file = os.path.join(os.path.dirname(__file__), '..', 'data', 'heroes.json')
        
        if not os.path.exists(heroes_file):
            print("‚ùå –§–∞–π–ª heroes.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª backend/data/heroes.json —Å –¥–∞–Ω–Ω—ã–º–∏ –≥–µ—Ä–æ–µ–≤")
            return False
        
        with open(heroes_file, 'r', encoding='utf-8') as f:
            heroes_data = json.load(f)
        
        imported_count = 0
        skipped_count = 0
        
        for hero_data in heroes_data:
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –≥–µ—Ä–æ–π —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
            existing_hero = db.query(Hero).filter(Hero.name == hero_data['name']).first()
            if existing_hero:
                print(f"‚ö†Ô∏è  –ì–µ—Ä–æ–π {hero_data['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                skipped_count += 1
                continue
            
            # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –≥–µ—Ä–æ—è
            hero = Hero(
                name=hero_data['name'],
                role=hero_data['role'],
                specialty=hero_data['specialty'],
                lane=hero_data.get('lane', []),
                durability=hero_data.get('stats', {}).get('durability'),
                offense=hero_data.get('stats', {}).get('offense'),
                control=hero_data.get('stats', {}).get('control'),
                difficulty=hero_data.get('stats', {}).get('difficulty'),
                passive_skill=hero_data.get('skills', {}).get('passive'),
                first_skill=hero_data.get('skills', {}).get('first'),
                second_skill=hero_data.get('skills', {}).get('second'),
                ultimate_skill=hero_data.get('skills', {}).get('ultimate'),
                release_date=hero_data.get('release_date'),
                price=hero_data.get('price'),
                image_url=hero_data.get('images', {}).get('main'),
                avatar_url=hero_data.get('images', {}).get('avatar'),
                win_rate=hero_data.get('meta_stats', {}).get('win_rate', 0.0),
                pick_rate=hero_data.get('meta_stats', {}).get('pick_rate', 0.0),
                ban_rate=hero_data.get('meta_stats', {}).get('ban_rate', 0.0)
            )
            
            db.add(hero)
            imported_count += 1
            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≥–µ—Ä–æ–π: {hero_data['name']}")
        
        db.commit()
        print(f"\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìä –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {imported_count} –≥–µ—Ä–æ–µ–≤")
        print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count} –≥–µ—Ä–æ–µ–≤")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def create_sample_heroes():
    """–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    db: Session = SessionLocal()
    
    try:
        sample_heroes = [
            {
                "name": "Layla",
                "role": "Marksman",
                "specialty": "Damage",
                "lane": ["Gold"],
                "durability": 2,
                "offense": 9,
                "control": 2,
                "difficulty": 1,
                "passive_skill": {
                    "name": "Malefic Gun",
                    "description": "Layla's basic attacks deal extra damage"
                },
                "first_skill": {
                    "name": "Malefic Bomb",
                    "description": "Layla fires a bomb that deals physical damage"
                },
                "second_skill": {
                    "name": "Void Projectile",
                    "description": "Layla fires a projectile that slows enemies"
                },
                "ultimate_skill": {
                    "name": "Destruction Rush",
                    "description": "Layla fires a powerful shot that deals massive damage"
                },
                "release_date": "2016-07-01",
                "price": {"bp": 2000, "diamond": 0},
                "image_url": "/static/heroes/layla.jpg",
                "avatar_url": "/static/heroes/layla_avatar.jpg",
                "win_rate": 48.5,
                "pick_rate": 15.2,
                "ban_rate": 2.1
            },
            {
                "name": "Tigreal",
                "role": "Tank",
                "specialty": "Crowd Control",
                "lane": ["EXP", "Roam"],
                "durability": 9,
                "offense": 3,
                "control": 8,
                "difficulty": 2,
                "passive_skill": {
                    "name": "Fearless",
                    "description": "Tigreal gains damage reduction when low on health"
                },
                "first_skill": {
                    "name": "Attack Wave",
                    "description": "Tigreal slashes forward dealing physical damage"
                },
                "second_skill": {
                    "name": "Sacred Hammer",
                    "description": "Tigreal charges forward and knocks up enemies"
                },
                "ultimate_skill": {
                    "name": "Implosion",
                    "description": "Tigreal pulls nearby enemies and stuns them"
                },
                "release_date": "2016-07-01",
                "price": {"bp": 2000, "diamond": 0},
                "image_url": "/static/heroes/tigreal.jpg",
                "avatar_url": "/static/heroes/tigreal_avatar.jpg",
                "win_rate": 52.1,
                "pick_rate": 8.7,
                "ban_rate": 12.3
            },
            {
                "name": "Eudora",
                "role": "Mage",
                "specialty": "Burst",
                "lane": ["Mid"],
                "durability": 3,
                "offense": 8,
                "control": 6,
                "difficulty": 2,
                "passive_skill": {
                    "name": "Superconductor",
                    "description": "Eudora's skills mark enemies for extra damage"
                },
                "first_skill": {
                    "name": "Forked Lightning",
                    "description": "Eudora fires lightning that bounces between enemies"
                },
                "second_skill": {
                    "name": "Electric Arrow",
                    "description": "Eudora fires an electric arrow that stuns enemies"
                },
                "ultimate_skill": {
                    "name": "Thunder's Wrath",
                    "description": "Eudora calls down lightning dealing massive magic damage"
                },
                "release_date": "2016-07-01",
                "price": {"bp": 2000, "diamond": 0},
                "image_url": "/static/heroes/eudora.jpg",
                "avatar_url": "/static/heroes/eudora_avatar.jpg",
                "win_rate": 49.8,
                "pick_rate": 12.4,
                "ban_rate": 5.6
            }
        ]
        
        for hero_data in sample_heroes:
            existing_hero = db.query(Hero).filter(Hero.name == hero_data['name']).first()
            if existing_hero:
                continue
            
            hero = Hero(**hero_data)
            db.add(hero)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –≥–µ—Ä–æ–π: {hero_data['name']}")
        
        db.commit()
        print("üéâ –ü—Ä–∏–º–µ—Ä—ã –≥–µ—Ä–æ–µ–≤ —Å–æ–∑–¥–∞–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    print("üéÆ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤ Mobile Legends")
    print("=" * 50)
    
    # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è - —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã
    if not import_heroes_data():
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        create_sample_heroes()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")